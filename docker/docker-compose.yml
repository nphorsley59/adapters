services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: app_container
    volumes:
      - ..:/app  # Bind mount the parent directory
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack:4566 
      - S3_BUCKET_NAME=test-bucket
      - PGPASSWORD=mypassword
      - PG_USER=myuser
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DATABASE=mydatabase
    depends_on:
      - localstack
      - init-s3
      - postgres
    entrypoint: ["/bin/sh", "-c", "/scripts/run-tests.sh"]

  localstack:
    image: localstack/localstack
    container_name: localstack_container
    ports:
      - "4566:4566"
      - "4572:4572"
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - localstack_data:/var/lib/localstack  # Use the named volume
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4566/_localstack/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

  init-s3:
    image: amazonlinux
    container_name: s3_container
    depends_on:
      - localstack
    entrypoint: ["/bin/sh", "-c", "/scripts/create-bucket.sh"]
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ../bin/create-bucket.sh:/scripts/create-bucket.sh  # Bind mount the script

  postgres:
    image: postgres:13
    container_name: postgres_container
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -h localhost -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  localstack_data:
  postgres_data:
